- Name: CheckEmail
  Code: |-
    if(Item.Email != null)
    {
        Item.Email = Item.Email.ToLower();
        string email = Item.Email;
        string regexValidation = @"^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$";
        bool result = Regex.IsMatch(email, regexValidation);
        return  result ? Success(): Message(Resources.UserPermissions.EmailBadFormat);
    }
    return  Success();
  Description: Check if email is in correct format
  Properties:
  - Email
- Name: CheckExpirationDate
  Code: |
    if(Item.ExpirationDate != null)
    {
        if(Item.ExpirationDate<= DateTime.Now)
        {
            return  Message(Resources.UserPermissions.ExpirationDateInvalidMessage);
        }
        return Success();
    }
    return Success();
  Description: Check if the expirationDate is valid or not
  Properties:
  - ExpirationDate
- Name: CheckPhoneNumber
  Code: |-
    string regexValidation = @"^(0)[1-9](([-. ]|)[0-9]{2}){4}$";
    if(Item.PhoneNumber != null)
    {
        bool result = Regex.IsMatch(Item.PhoneNumber, regexValidation);
        return  result ? Success(): Message(Resources.UserPermissions.PhoneNumberBadFormat);
    }
    return Success();
  Description: Check if phone number is in correct format
  Properties:
  - PhoneNumber
