- Name: GetAvailableUser
  Caption: Get available user
  Code: |
    if(this.HasChanges)
    {
        ShowMessageAsync(MessageType.Danger,
                Resources.UserPermissions.SaveBeforeUseTitle,
                Resources.UserPermissions.SaveBeforeUse);
    }
    else
    {

        NavigationOptions options = new NavigationOptions("UserAccountAvailableUI")
        .WithCallback<List<UserAccountAvailableUI>>(async r =>
        {
            if (r.State == NavigationResultState.Ok && r.Value != null)
            {
                foreach(var userAccount in r.Value)
                {
                    var item = await this.AddNewAsync();
                    item.Login = userAccount.Email;
                    item.Email = userAccount.Email;
                    item.FirstName = userAccount.FirstName;
                    item.LastName = userAccount.LastName;
                    item.Synchronized = true;
                }
            }
        });
        NavigateAsync(options);
    }
  Location: ActionsMenu
  ParentActionName: More
  Position: 3
  Style: Ghost
- Name: SendMail
  Caption: Send mail
  Code: SystemEnvironment.Window.OpenUrl("mailto:" + Item.Email);
  DisplayMode: Icon
  IconName: UserPermissionsSendEmail
  Location: Hidden
  Style: GhostPrimary
  Visible: =return Item.Email != null;
- Name: SendSMS
  Caption: Send SMS
  Code: SystemEnvironment.Window.OpenUrl("tel:" + Item.PhoneNumber);
  DisplayMode: Icon
  IconName: UserPermissionsSendSMS
  Location: Hidden
  Style: GhostPrimary
  Visible: =return Item.PhoneNumber != null;
- Name: SynchronizeUsers
  Caption: Synchronize
  Code: |-
    if(SelectedItems.Any()) {
        List<UserAuthentication> users = new List<UserAuthentication>();

        foreach(var item in SelectedItems) {
            UserAuthentication userAuthentication = new UserAuthentication();
            userAuthentication.Email = item.Email;
            userAuthentication.Name = item.Login;
            userAuthentication.FirstName = item.FirstName;
            userAuthentication.LastName = item.LastName;

            users.Add(userAuthentication);
        }

        UserPermissionsMethodResult result = await ServerMethods.SaveUsersToAuthenticationServer.ExecuteAsync(users.ToArray());

        if(result.Message != null) {
            await ShowMessageAsync(MessageType.Danger, Resources.UserPermissions.SaveUsersToAuthenticationServerMessageTitle, result.Message);
        }
        else
        {
            await ShowMessageAsync(MessageType.Positive, Resources.UserPermissions.SaveUsersToAuthenticationServerMessageTitle, Resources.UserPermissions.SaveUsersToAuthenticationServerSuccessed);
        }
    }
  Description: Synchronize selected users with authentication server.
  Enabled: =return SelectedItems.Any();
  IconName: sync_black
  Location: ActionsMenu
  ParentActionName: More
  Position: 1
  Style: Ghost
