- Name: DownCulture
  Code: |
    // Ne pas enlever le .Select(c => c) qui permet de faire une copie de tableau sinon le changement du string array n'est pas pris en compte car
    // il y a un problème avec le string array
    // Bug 15525: StringArray : modification par code su string array : l'indicateur de changement n'apparaît pas
    var newInputCultures = Methods.GetUserAccountInputCultures(DatasourceCurrent);
    var itemPosition = newInputCultures.IndexOf(item.Culture.Code);
    if(itemPosition < newInputCultures.Count)
    {
        newInputCultures.RemoveAt(itemPosition);
        newInputCultures.Insert(itemPosition + 1, item.Culture.Code);
    }
    DatasourceCurrent.InputCultureCodes = newInputCultures;
- Name: DragEndCulture
  Code: item.DropZoneBackground = "transparent";
- Name: DragOverCulture
  Code: return args.GetInternalObjectData() is CultureFlag;
  DotNetReturnType: bool
- Name: DragStartCulture
  Code: |-
    item.DropZoneBackground = "primary-50";
    args.SetInternalObjectData(item);
- Name: DropCulture
  Code: |+
    var cultureFrom = args.GetInternalObjectData() as CultureFlag;
    cultureFrom.DropZoneBackground = "transparent";
    item.DropZoneBackground = "transparent";

    var cultureCodes = Methods.GetUserAccountInputCultures(DatasourceCurrent);
    var indexFrom = cultureCodes.IndexOf(cultureFrom.Culture.Code);

    var indexTo = cultureCodes.IndexOf(item.Culture.Code);

    cultureCodes[indexFrom] = item.Culture.Code;
    cultureCodes[indexTo] = cultureFrom.Culture.Code;

    DatasourceCurrent.InputCultureCodes = cultureCodes;

- Name: GetCultureFlagFromCulture
  Code: |-
    CultureFlag c = new CultureFlag();
    c.Culture =  culture;
    c.CountryCode = culture.Code.Length >=5 ? culture.Code[^2..].ToUpper() : null;
    c.Flag = c.CountryCode != null ?  $"flag{c.CountryCode}" : null;
    return c;
  DotNetReturnType: Transversals.Business.Application.Abstractions.DataObjects.CultureFlag
- Name: GetUserAccountInputCultures
  Code: |
    // Ne pas enlever le .Select(c => c) qui permet de faire une copie de tableau sinon le changement du string array n'est pas pris en compte car
    // il y a un problème avec le string array
    // Bug 15525: StringArray : modification par code su string array : l'indicateur de changement n'apparaît pas
    return DatasourceCurrent.InputCultureCodes.Select(c => c).ToList();
  DotNetReturnType: System.Collections.Generic.List<string>
- Name: InitInputCulturesAsync
  Asynchronous: true
  Code: |-
    CultureFlag GetCultureFlagFromCulture(ICulture c)
    {
        CultureFlag culture = new CultureFlag();
        culture.Culture =  c;
        culture.CountryCode = c.Code.Length >=5 ? c.Code[^2..].ToUpper() : null;
        culture.Flag = culture.CountryCode != null ?  $"flag{culture.CountryCode}" : null;
        return culture;
    }

    if(item.InputCultureCodes != null && item.InputCultureCodes.Any())
    {
        var response = await ApiClient.GetAllAsync<ICulture>(new ApiGetAllRequest(){
            Path = $"Culture",
            Filter = $"code in ({string.Join(",", item.InputCultureCodes.Select( c => $"'{c}'"))})"
        });

        if(response.Succeeded)
        {
            IEnumerable<CultureFlag> cultures = response.Data.Select( c => Methods.GetCultureFlagFromCulture(c));
            Fields.InputCultures = cultures;
        }
    }
- Name: RemoveCulture
  Code: |-
    var newInputCultures = Methods.GetUserAccountInputCultures(DatasourceCurrent);
    var itemPosition = newInputCultures.IndexOf(item.Culture.Code);
    if(itemPosition >= 0)
    {
        newInputCultures.RemoveAt(itemPosition);
    }

    DatasourceCurrent.InputCultureCodes = newInputCultures;
- Name: UpCulture
  Code: |-
    var newInputCultures = Methods.GetUserAccountInputCultures(DatasourceCurrent);
    var itemPosition = newInputCultures.IndexOf(item.Culture.Code);
    if(itemPosition > 0)
    {
        newInputCultures.RemoveAt(itemPosition);
        newInputCultures.Insert(itemPosition - 1, item.Culture.Code);
    }

    DatasourceCurrent.InputCultureCodes = newInputCultures;
