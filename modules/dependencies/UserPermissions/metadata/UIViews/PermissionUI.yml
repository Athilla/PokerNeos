Description: Permission
Documentation: Entity UI not displayed, only used as a context for other UI with sub-views on permission
EntityViewName: PermissionView
Template: |-
  <vertical-layout layout:height="fill">
      <card layout:height="fill">
   <if-not condition="@Computeds.RoleIsNewOrNotSelected">
          <splitter layout:height="fill">
              <splitter-panel size="60">
                  <tree-view layout:height="fill" layout:width="fill"
                          source="@Fields.FunctionTreeViewSource"
                          caption-property="Caption"
                          children-property="Children"
                          node-click="OnClickMethodNodeAsync"
                          node-load="OnLoadMethodNodeAsync"
                          selected-property="Selected"
                          expanded-property="Expanded"  >
              <tree-view-header>
                  <button type="action" action-name="ExpandAll" />
                  <button type="action" action-name="CollapseAll" />
                  <!-- <button type="method" method-name="ExpandAll" variant="ghost">
                      <image name="Expand" size="medium"/>
                  </button>

                  <button type="method" method-name="CollapseAll" variant="ghost">
                      <image name="Collapse" size="medium"/>
                  </button> -->

  	         </tree-view-header>
               <tree-view-node item="Node" >
                                <text layout:padding="none">
                                  $Node.Caption
                              </text>
                              <if condition="$Node.Icon">
                                  <text layout:padding="none" >
                                      $Node.Icon
                                  </text>
                                  <button type="method" method-name="DeletePermissionAsync" variant="ghost" size="small" layout:padding="none">
                                      <image name="remove" />
                                  </button>
                              </if>
                              <else>
                                  <button type="method" method-name="AddDefaultPermissionAsync" variant="ghost" size="small" layout:padding="none">
                                      <image name="add" />
                                  </button>
                              </else>
                          </tree-view-node>

                  </tree-view>
              </splitter-panel>
              <splitter-panel>
                  <vertical-layout layout:height="fill" layout:padding="small">
                      <if condition="@Computeds.ShowHasAll">
                          <checkbox property-name="HasAll" display-mode="horizontal-radio" true-label="@Resources.UserPermissions.AcceptAllRadioLabelTrue" false-label="@Resources.UserPermissions.AcceptAllRadioLabelFalse" null-label="@Resources.UserPermissions.AcceptAllRadioLabelNull" />
                      </if>
                      <form-field property-name="HasAccess" />
                      <form-field property-name="HasReadOnlyAccess" />
                      <form-field property-name="HasCreationAccess" />
                      <form-field property-name="HasUpdateAccess" />
                      <form-field property-name="HasDeleteAccess" />
                  </vertical-layout>
              </splitter-panel>
          </splitter>
        </if-not>
      </card>
  </vertical-layout>
Title: |-
  =var assignPermissionToRolesUI = GetParentItem<AssignPermissionToRolesUI>();
  if(assignPermissionToRolesUI?.Name != null)
  {
      return Resources.UserPermissions.PermissionTitle + $" : {assignPermissionToRolesUI.Name}";
  }
  return Resources.UserPermissions.PermissionTitle;
