- Name: CoreGameAsync
  Asynchronous: true
  Code: |-
    for(int i=0; i<3600 && !@Fields.Unloaded ; i++)
    {
        try
        {
            await Methods.KeepAliveAsync();
            await Task.Delay(2000);
        }
        catch(Exception ex)
        {
            Console.WriteLine("Erreur recuperation data");
        }
    }
- Name: InitGame
  Code: |
    if(@Fields.CurrentPosition == null)
    {
        @Fields.CurrentPosition = 0;
    }
    @Fields.ItemList[Fields.CurrentPosition.Value].IsCurrent = true;
    @Fields.IsLast = @Fields.CurrentPosition.Value == Fields.ItemList.Count-1 ? true : false ;
    @Fields.IsFirst = @Fields.CurrentPosition.Value == 0 ? true : false ;
    @Fields.CurrentTitle = @Fields.ItemList[Fields.CurrentPosition.Value].Name;
- Name: KeepAliveAsync
  Asynchronous: true
  Code: |-
    //Console.WriteLine(DatasourceCurrent);
    if(DatasourceCurrent != null)
    {
        PokerNeos.Application.Abstractions.DataObjects.GameDataDO data = await ServerMethods.GetLastGameInformation.ExecuteAsync((int)DatasourceCurrent.GameId);
        if(data.IsSuccess)
        {
            ///////////////////////////////////////b
            ///
            ///ManageCurrentPosition
            ///

            if(data.GameInProgress.CurrentItem.HasValue)
            {
                for(int i=0; i<@Fields.ItemList.Count; i++)
                {
                    if(Fields.ItemList[i].Id == data.GameInProgress.CurrentItem.Value)
                    {
                        if(@Fields.CurrentPosition == null)
                        {
                            @Fields.CurrentPosition = 0;
                        }
                        @Fields.ItemList[Fields.CurrentPosition.Value].IsCurrent = false;
                        Fields.CurrentPosition = i;
                        @Fields.ItemList[Fields.CurrentPosition.Value].IsCurrent = true;
                        break;
                    }
                }
            }

            ///////////////////////////////////////
            ///
            ///IsStart
            ///
            @Fields.IsStart = data.GameInProgress.State.HasValue ? data.GameInProgress.State.Value == GameState.Started : false;

            ///////////////////////////////////////
            ///
            ///ShowVote
            ///
            @Fields.ShowVote = data.GameInProgress.ShowVote.HasValue ? data.GameInProgress.ShowVote.Value : false;


            ///////////////////////////////////////
            ///
            ///Manage User and Vote
            ///

            ///////////////////////////////////////
            ///
            ///CurrentTitle, IsLast, IsFirst
            ///
            Methods.UpdateGame();
        }
    }
- Name: UpdateGame
  Code: |+
    @Fields.CurrentTitle = @Fields.ItemList[Fields.CurrentPosition.Value].Name;
    @Fields.IsLast = @Fields.CurrentPosition.Value == Fields.ItemList.Count-1 ? true : false ;
    @Fields.IsFirst = @Fields.CurrentPosition.Value == 0 ? true : false ;

