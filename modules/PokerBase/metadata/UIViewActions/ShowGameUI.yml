- Name: NextUs
  Caption: US Suivante
  Code: |
    // Console.WriteLine($"Nb item : {@Fields.ItemList.Count}");
    // Console.WriteLine($"Current position : {@Fields.CurrentPosition}");
    // Console.WriteLine($"IsFirst : {@Fields.IsFirst}");
    // Console.WriteLine($"IsLast : {@Fields.IsLast}");

    if(@Fields.CurrentPosition.HasValue && @Fields.CurrentPosition.Value < @Fields.ItemList.Count-1)
    {
        Fields.ItemList[@Fields.CurrentPosition.Value].IsCurrent = false;
        @Fields.CurrentPosition++;
        Fields.ItemList[Fields.CurrentPosition.Value].IsCurrent = true;
    }
    if(DatasourceCurrent?.GameId != null && Fields.CurrentPosition!=null )
    {
        GameEventDO myevent = new GameEventDO();
        myevent.GameId = DatasourceCurrent.GameId.Value;
        myevent.Event = Event.ChangeUS;
        myevent.ItemId = Fields.ItemList[Fields.CurrentPosition.Value].Id;
        await ServerMethods.SendEvent.ExecuteAsync(myevent);
    }
    Methods.UpdateGame();
  DisplayMode: Icon
  Enabled: =return !Fields.IsLast && Fields.IsStart;
  IconName: Next
  Location: Hidden
  Size: Large
  Style: GhostPrimary
- Name: PreviousUs
  Caption: US PrÃ©cedente
  Code: |-
    // Console.WriteLine($"Nb item : {@Fields.ItemList.Count}");
    // Console.WriteLine($"Current position : {@Fields.CurrentPosition}");
    // Console.WriteLine($"IsFirst : {@Fields.IsFirst}");
    // Console.WriteLine($"IsLast : {@Fields.IsLast}");

    if(@Fields.CurrentPosition.HasValue && @Fields.CurrentPosition.Value > 0)
    {
        Fields.ItemList[@Fields.CurrentPosition.Value].IsCurrent = false;
        @Fields.CurrentPosition--;
        Fields.ItemList[Fields.CurrentPosition.Value].IsCurrent = true;
    }
    if(DatasourceCurrent?.GameId != null && Fields.CurrentPosition!=null )
    {
        GameEventDO myevent = new GameEventDO();
        myevent.GameId = DatasourceCurrent.GameId.Value;
        myevent.Event = Event.ChangeUS;
        myevent.ItemId = Fields.ItemList[Fields.CurrentPosition.Value].Id;
        await ServerMethods.SendEvent.ExecuteAsync(myevent);
    }
    Methods.UpdateGame();
  DisplayMode: Icon
  Enabled: =return !Fields.IsFirst && Fields.IsStart;
  IconName: Previous
  Location: Hidden
  Size: Large
  Style: GhostPrimary
- Name: RunGame
  Caption: Run game
  Code: |-
    // Console.WriteLine($"Nb item : {@Fields.ItemList.Count}");
    // Console.WriteLine($"Current position : {@Fields.CurrentPosition}");
    // Console.WriteLine($"IsFirst : {@Fields.IsFirst}");
    // Console.WriteLine($"IsLast : {@Fields.IsLast}");


    if(DatasourceCurrent?.GameId != null)
    {
        GameEventDO myevent = new GameEventDO();
        myevent.GameId = DatasourceCurrent.GameId.Value;
        myevent.Event = Event.HasStarted;
        await ServerMethods.SendEvent.ExecuteAsync(myevent);
        Fields.IsStart = true;
    }
  DisplayMode: Icon
  IconName: Play2
  Location: Hidden
  Size: Large
  Style: GhostPrimary
  Visible: =return !Fields.IsStart;
- Name: StopGame
  Caption: Stop game
  Code: |2-

    if(DatasourceCurrent?.GameId != null)
    {
        GameEventDO myevent = new GameEventDO();
        myevent.GameId = DatasourceCurrent.GameId.Value;
        myevent.Event = Event.HasStopped;
        await ServerMethods.SendEvent.ExecuteAsync(myevent);
        Fields.IsStart = false;
    }
  DisplayMode: Icon
  IconName: Stop
  Location: Hidden
  Size: Large
  Style: GhostDanger
  Visible: =return Fields.IsStart;
